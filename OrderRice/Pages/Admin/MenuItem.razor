@using OrderRice.Model
@using OrderRice.Service
@inject OrderRiceService orderRiceService

<tr>
    <td>@Dish.name</td>

    @if (!isEditingPrice)
    {
        <td style="display: flex; align-content: center; justify-content: space-between;">
            @_strGia
            <MudButton Variant="Variant.Filled"
                       Color="Color.Success"
                       Class="ml-2"
                       OnClick="HandleClickEditPrice">
                Edit
            </MudButton>
        </td>
    }
    else
    {
        <td>
            <MudTextField @bind-Value="_strGia"
                          InputType="InputType.Number"
                          Variant="Variant.Outlined"
                          Margin="Margin.Dense"
                          AutoFocus="true"
                          Immediate="true">
            </MudTextField>

            <MudButton Variant="Variant.Filled"
                       Style="background-color: green; color: white;"
                       Class="ml-2"
                       OnClick="EditPrice">
                OK
            </MudButton>

            <MudButton Variant="Variant.Filled"
                       Style="background-color: darkred; color: white;"
                       Class="ml-2"
                       OnClick="HandleClickEditPrice">
                Cancel
            </MudButton>
        </td>
    }

    <td class="" style="width:10%;">
        <MudButton Variant="Variant.Filled"
                    Color="Color.Error"
                    Class="mx-2"
                    OnClick="DeleteDish">
            Delete
        </MudButton>
    </td>
</tr>


@code {
    [Parameter]
    public Dish Dish { get; set; }
    [Parameter]
    public EventCallback<string> OnEventChange { get; set; }

    string _strGia { get; set; }

    protected override void OnInitialized()
    {
        _strGia = Dish.gia.ToString();
    }

    bool isEditingPrice { get; set; } = false;
    string tempPrice { get; set; }

    //when user click Edit button
    void HandleClickEditPrice()
    {
        if (!isEditingPrice)
        {
            isEditingPrice = true;
            tempPrice = _strGia;
        }
        else
        {
            _strGia = tempPrice;
            isEditingPrice = false;
        }
    }

    //when user click OK -> EDIT
    async void EditPrice()
    {
        Dish.gia = Int32.Parse(_strGia);

        bool result = await orderRiceService.UpdateDishAsync(Dish);
        if (result)
        {
            isEditingPrice = false;
            await OnEventChange.InvokeAsync(Dish.id);
        }
        else
        {
            //TODO: show message error: edit that bai
        }
    }

    async void DeleteDish()
    {
        bool result = await orderRiceService.DeleteDishAsync(Dish.id);
        if (result)
        {
            await OnEventChange.InvokeAsync(Dish.id);
        }else
        {
            //TODO: show message error: delete that bai
        }
    }
}
