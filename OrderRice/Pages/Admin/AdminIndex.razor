@page "/admin"
@using OrderRice.Model
@using OrderRice.Service
@using OrderRice.Pages.Admin.Components

@inject OrderRiceService orderRiceService
@inject IDialogService DialogService
@inject IDialogService Dialog

<MudText Typo="Typo.h3" Align="Align.Center">Admin</MudText>

<MudGrid>
    @if (!isLogin)
    {
        <div style="display: flex; justify-content: center;">
            <MudItem xs="12">
                <MudTextField @bind-Value="Key"
                                Label="Login"
                                InputType="InputType.Password"
                                Variant="Variant.Outlined"
                                Margin="Margin.Dense"
                                Immediate="true"
                                AutoFocus="true"
                                OnKeyPress="KeyPressLogin">
                </MudTextField>
            </MudItem>
            <MudButton Variant="Variant.Filled"
                        Style="background-color: green; color: white;" Class="ml-2"
                        OnClick="HandleAdminLogin">
                Login
            </MudButton>
        </div>
    }
    else
    {
        <MudItem xs="12" md="3">
            <div style="display: flex;">
                <MudTextField @bind-Value="GiaCom"
                            Label="Giá cơm"
                            InputType="InputType.Text"
                            Variant="Variant.Text"
                            Margin="Margin.Dense"
                            Immediate="true">
                </MudTextField>
                <MudTextField @bind-Value="GiaDoAn"
                            Label="Giá đồ ăn"
                            InputType="InputType.Text"
                            Variant="Variant.Text"
                            Margin="Margin.Dense"
                            Immediate="true">
                </MudTextField>
            </div>
            <AddMenu GiaCom="@GiaCom" GiaDoAn="@GiaDoAn" OnEventChange="@OnEventChangeDish" />
        </MudItem>
        <MudItem xs="12" md="6">
            @if (dishs.Count > 0)
            {
               <ListMenu Dishs="@dishs" OnEventChange="@OnEventChangeDish" />
            } else
            {
                <MudText Typo="Typo.h6" Align="Align.Center">Chưa có bất kì món ăn nào!</MudText>
            }
        </MudItem>

        <MudItem xs="12" md="3">
            <ListUserThieu UserThieus="@userThieus" OnEventChange="@OnEventChangeUserThieus"/>
        </MudItem>



        <MudItem xs="12" md="6">
            <ListUser Dishs="@dishs" Users="@users" OnEventChange="@OnEventChangeUser" />
        </MudItem>
        <MudItem xs="12" md="6">
            <MudText Typo="Typo.h5" Align="Align.Center">&nbsp;</MudText>
            @if (users.Count > 0)
            {
               <ReportTable Dishs="@dishs" Users="@users" OnEventChange="@OnEventChangeUser" />
            }
            @if (dishs.Count > 0 || users.Count > 0)
            {
                <div style="display: flex; justify-content: space-between; align-items:flex-end; flex-wrap: nowrap;">
                    <MudButton Variant="Variant.Filled"
                        Color="Color.Info"
                        Size="Size.Large"
                        FullWidth="true"
                        Class="mr-1"
                        OnClick="@(() => { OnEventChangeUser("_"); })">
                        Check Update Order
                    </MudButton>
                    <MudButton Variant="Variant.Filled"
                            Color="Color.Error"
                            Size="Size.Large"
                            FullWidth="true"
                            OnClick="HandleDeleteAllMenuAllUser">
                        Delete All Menu, All User
                    </MudButton>
                </div>
            }
        </MudItem>
    }
</MudGrid>

@code {
    int GiaCom { get; set; } = 22;
    int GiaDoAn { get; set; } = 18;

    string Password { get; set; } = "b";

    string Key { get; set; }
    bool isLogin { get; set; } = false;

    List<Dish> dishs;
    List<User> users;
    List<UserThieu> userThieus;

    protected override async Task OnInitializedAsync()
    {
        dishs = await orderRiceService.GetDishAsync();
        users = await orderRiceService.GetUserAsync();
        userThieus = await orderRiceService.GetUserThieuAsync();
    }

    void KeyPressLogin(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            HandleAdminLogin();
        }
    }

    void HandleAdminLogin()
    {
        if (Key == Password)
        {
            isLogin = true;
        }
        else
        {
            @*TODO: show message sai password*@
        }
    }

    async void OnEventChangeDish(string idDish)
    {
        dishs = new();
        dishs = await orderRiceService.GetDishAsync();
    }

    async void OnEventChangeUser(string idUser)
    {
        userThieus = new();
        userThieus = await orderRiceService.GetUserThieuAsync();
        users = new();
        users = await orderRiceService.GetUserAsync();
    }

    async void OnEventChangeUserThieus()
    {
        userThieus = new();
        userThieus = await orderRiceService.GetUserThieuAsync();
    }

    async void HandleDeleteAllMenuAllUser()
    {
        var parameters = new DialogParameters();
        parameters.Add("ContentText", "Bạn có thật sự muốn xoá hết Menu và User Order? - những user thiếu tiền sẽ được lưu trữ lại và thêm vào bảng con nợ!");
        parameters.Add("ButtonText", "Delete");
        parameters.Add("Color", Color.Error);

        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };

        var dialog = DialogService.Show<Dialog>("Delete", parameters, options);
        var result = await dialog.Result;
        if (!result.Cancelled)
        {
            //check and add user thieu tien to UserThieu db
            List<UserThieu> UserThieus = new();
            foreach (var user in users.Where(c => c.tienDaNhan < c.tongTien))
            {
                UserThieu tempUserThieu = new UserThieu()
                {
                    id = user.id,
                    name = user.name,
                    tienThieu = user.tongTien - user.tienDaNhan
                };
                UserThieus.Add(tempUserThieu);
            }
            await orderRiceService.AddUserThieuAsync(UserThieus); await orderRiceService.DeleteAllDishAsync();
            //delete all
            await orderRiceService.DeleteAllDishAsync();
            await orderRiceService.DeleteAllUserAsync();
            dishs = new();
            users = new();
            //get lai userThieus, cach khac (concat newUserThieus vao List userThieus khong can get lai tu db)
            userThieus = await orderRiceService.GetUserThieuAsync();
            StateHasChanged();
        }
    }

    async void OnClickAddMenu()
    {
        dishs = await orderRiceService.GetDishAsync();
    }
}