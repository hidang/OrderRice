@page "/admin"
@using OrderRice.Model
@using OrderRice.Service

@inject OrderRiceService orderRiceService

<MudText Typo="Typo.h3" Align="Align.Center">Admin</MudText>
<hr />
<MudPaper Square="true">
    <MudContainer Style="display: flex; justify-content: center;">
        <div>
            @if (!isLogin)
            {
                <div style="display: inline-flex; justify-content: center;">
                    <MudItem xs="12">
                        <MudTextField
                            @bind-Value="Key"
                            Label="Login"
                            InputType="InputType.Password"
                            Variant="Variant.Outlined"
                            Margin="Margin.Dense">
                        </MudTextField>
                    </MudItem>
                    <MudButton
                               Variant="Variant.Filled"
                               Style="background-color: green; color: white;" Class="ml-2"
                               OnClick="HandleAdminLogin">
                        Login
                    </MudButton>
                </div>
            }
            else
            {
                <AddMenu OnEventChange="@OnEventChangeDish" />
                <ListMenu Dishs="@dishs" OnEventChange="@OnEventChangeDish" />
                <ListUser Dishs="@dishs" Users="@users" OnEventChange="@OnEventChangeUser" />
                <ReportTable @ref="_reportTable" Dishs="@dishs" Users="@users" OnEventChange="@OnEventChangeUser" />
                <MudButton
                           Variant="Variant.Filled"
                           Color="Color.Error"
                           Class="ma-2"
                           OnClick="HandleDeleteAllMenuAllUser">
                    Delete All Menu, All User Order
                </MudButton>
            }
        </div>
    </MudContainer>
</MudPaper>


@code {
    ReportTable _reportTable;
    string Password { get; set; } = "a";

    string Key { get; set; }
    bool isLogin { get; set; } = false;

    List<Dish> dishs = new() { };
    List<User> users = new() { };

    protected override async Task OnInitializedAsync()
    {
        dishs = await orderRiceService.GetDishAsync();
        users = await orderRiceService.GetUserAsync();
    }

    void HandleAdminLogin()
    {
        if (Key == Password)
        {
            isLogin = true;
        }
        else
        {
            @*TODO: show message sai password*@
        }
    }

    async void OnEventChangeDish(string idDish)
    {
        dishs = new();
        dishs = await orderRiceService.GetDishAsync();
        _reportTable.Refresh();
    }

    async void OnEventChangeUser(string idUser)
    {
        users = new();
        users = await orderRiceService.GetUserAsync();
        _reportTable.Refresh();
    }

    async void HandleDeleteAllMenuAllUser()
    {
        await orderRiceService.DeleteAllDishAsync();
        await orderRiceService.DeleteAllUserAsync();
        dishs = new();
        users = new();
        _reportTable.Refresh();
    }

    async void OnClickAddMenu()
    {
        dishs = await orderRiceService.GetDishAsync();
    }
}
