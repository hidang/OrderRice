@using OrderRice.Model
@using OrderRice.Service

@inject OrderRiceService orderRiceService

<h1>Đặt cơm</h1>
<hr />

@if (dishs == null)
{
    <p><em>Loading dishes...</em></p> }
else
{
    @if (dishs.Count > 0)
    {
        <p>Menu Updated: ../../2021</p>

        @if (isOrdered)
        {
            <p>Tên: @Name</p>
        }
        else
        {
            <p>Tên: <input type="text" @bind="@Name" @bind:event="oninput" /></p>
        }

        <p>Chọn món ăn:</p>
        <DishItemList @bind-DishSelecteds="DishSelecteds" Dishs="@dishs" />
        <p>
            @(Name + (Name != null?": ":null))
            @foreach (var dish in DishSelecteds)
            {
                @(dish.name + " ")
            }
            @*Tổng tiền: null*@
        </p>

        @if (isOrdered)
        {
            <p>Ghi chú: @Note</p>
        }
        else
        {
            <p>Ghi chú: <input @bind-value="@Note" /></p>
        }

        @if (!isOrdered)
        {
            bool isSubmit = (Name?.Length >= 2 && DishSelecteds.Count > 0) ? true : false;
            <input type="button" disabled="@(!isSubmit)" class="btn btn-success" value="Đặt" @onclick="HandleUserSubmit" />
        }
        else
        {
            <a class="mr-2">Đặt cơm thành công!</a>
            <input type="button" class="btn btn-info my-2" value="Đặt giùm người khác" @onclick="HandleClickDatGium" />
        }
    }
    else
    {
        <p>Chưa có thực đơn hôm nay!</p>
    }
}

@code{
    List<Dish> dishs = new();
    List<Dish> DishSelecteds = new();
    string Name { get; set; }
    string Note { get; set; }
    bool isOrdered { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        dishs = await orderRiceService.GetDishAsync();
    }

    int SumPriceOrder()
    {
        int tempSum = 0;
        {
            foreach (var dish in DishSelecteds)
            {
                tempSum += dish.gia;
            }
        }
        return tempSum;
    }

    async void HandleUserSubmit()
    {
        User temp_user = new User()
        {
            id = Guid.NewGuid().ToString(),
            name = Name,
            dishs = DishSelecteds,
            note = Note,
            tongTien = SumPriceOrder(),
            tienDaNhan = 0
        };
        bool result = await orderRiceService.AddUserAsync(temp_user);
        if (result)
        {
            isOrdered = true;
        }
        else
        {
            isOrdered = false;

            //Debug.WriteLine(temp_todo);
            //TODO: show message error: add todo fail
        }
    }
    void HandleClickDatGium()
    {
        Name = "";
        isOrdered = false;
        DishSelecteds = new();
        //_dishItemList.Refesh();
    }
}

